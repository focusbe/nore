{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./autodater.ts","webpack:///./initmenu.ts","webpack:///./libs/env.ts","webpack:///./main.ts","webpack:///./mysocket.ts","webpack:///./winmanager.ts","webpack:///external \"electron\"","webpack:///external \"path\"","webpack:///external \"url\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA,oBAAoB,mBAAO,CAAC,yEAAkB;AACX;AACD;AAClC;AACA;AACA,YAAY,+CAAK;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB,YAAY,iDAAQ;AACpB,SAAS;AACT;AACA;AACA;AACe,0EAAW,EAAC;;;;;;;;;;;;;AChD3B;AAAA,iBAAiB,mBAAO,CAAC,0BAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,0BAAU;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,yEAAU,EAAC;;;;;;;;;;;;;AChM1B;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACoC;;;;;;;;;;;;;ACHpC;AAAA;AAAA;AAAA;AAAA,iBAAiB,mBAAO,CAAC,0BAAU;AACnC;AACA;AACsC;AACA;AACJ;AAClC;AACA;AACA;AACA;AACA,YAAY,yDAAQ;AACpB,YAAY,mDAAU;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,YAAY,mDAAU;AACtB,SAAS;AACT,QAAQ,kDAAW;AACnB;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AAAA;AAAsC;AACtC,iBAAiB,mBAAO,CAAC,0BAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC;AAChC,aAAa,mDAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mDAAU;AAClB;AACA;AACA,SAAS;AACT;AACA;AACA,sBAAsB,mDAAU;AAChC,YAAY,mDAAU;AACtB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,IAAI;AACJ;AACA;AACe,uEAAQ,EAAC;;;;;;;;;;;;;AC/ExB;AAAA;AAAA,iBAAiB,mBAAO,CAAC,0BAAU;AACnC;AACA,YAAY,mBAAO,CAAC,gBAAK;AACzB,aAAa,mBAAO,CAAC,kBAAM;AACmB;AAC9C;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,gBAAgB,+CAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mDAAS;AACpD;AACA;AACA,iDAAiD,mDAAS;AAC1D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACe,yEAAU,EAAC;;;;;;;;;;;;AC9E1B,qC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,gC","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Users/liu/www/github/webcreator/dist/main\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./main.ts\");\n","const autoUpdater = require(\"electron-updater\").autoUpdater;\nimport { DEBUG } from './libs/env';\nimport mySocket from \"./mysocket\";\nclass AutoUpdater {\n    static init() {\n        if (DEBUG) {\n            return;\n        }\n        var self = this;\n        autoUpdater.on(\"checking-for-update\", () => {\n            //console.log('checking');\n        });\n        autoUpdater.on(\"update-available\", (ev, info) => {\n            // if (DEBUG) {\n            //     console.log('有更新');\n            // }\n            // console.log('available');\n        });\n        autoUpdater.on(\"update-not-available\", (ev, info) => {\n            // console.log('not-available');\n            //alert('无更新');\n        });\n        autoUpdater.on(\"error\", (ev, err) => {\n            //console.log('error:');\n            //console.log(ev);\n            // console.log(err);\n        });\n        autoUpdater.on(\"download-progress\", (ev, progressObj) => {\n            // console.log('download progress');\n            // console.log(ev);\n            // console.log(progressObj);\n            // \t\t\t{total: 83452555,\n            //   delta: 233280,\n            //   transferred: 437227,\n            //   percent: 0.5239228445432258,\n            //   bytesPerSecond: 174751 }\n            //self.sendTo('main','alert','Download progress...');\n        });\n        autoUpdater.on(\"update-downloaded\", (ev, info) => {\n            //console.log('update-downloaded');\n            // setTimeout(function () {\n            // \tautoUpdater.quitAndInstall();\n            // }, 5000)\n            mySocket.sendTo(\"main\", \"update-downloaded\");\n        });\n        autoUpdater.checkForUpdates();\n    }\n}\nexport default AutoUpdater;\n","const electron = require(\"electron\");\nconst Menu = electron.Menu;\nfunction setAppMenu(app) {\n    var self = this;\n    let template;\n    template = [\n        {\n            label: \"编辑\",\n            submenu: [\n                {\n                    label: \"撤销\",\n                    accelerator: \"CmdOrCtrl+Z\",\n                    selector: \"undo:\"\n                },\n                {\n                    label: \"重做\",\n                    accelerator: \"Shift+CmdOrCtrl+Z\",\n                    selector: \"redo:\"\n                },\n                {\n                    type: \"separator\"\n                },\n                {\n                    label: \"剪切\",\n                    accelerator: \"CmdOrCtrl+X\",\n                    selector: \"cut:\"\n                },\n                {\n                    label: \"复制\",\n                    accelerator: \"CmdOrCtrl+C\",\n                    selector: \"copy:\"\n                },\n                {\n                    label: \"粘贴\",\n                    accelerator: \"CmdOrCtrl+V\",\n                    selector: \"paste:\"\n                },\n                {\n                    label: \"全选\",\n                    accelerator: \"CmdOrCtrl+A\",\n                    selector: \"selectAll:\"\n                }\n            ]\n        },\n        {\n            label: \"视图\",\n            submenu: [\n                {\n                    label: \"刷新\",\n                    role: \"reload\"\n                },\n                {\n                    label: \"强制刷新\",\n                    role: \"forcereload\"\n                },\n                {\n                    label: \"开发者工具\",\n                    role: \"toggledevtools\"\n                },\n                {\n                    type: \"separator\"\n                },\n                {\n                    label: \"重置缩放\",\n                    role: \"resetzoom\"\n                },\n                {\n                    label: \"缩小\",\n                    role: \"zoomin\"\n                },\n                {\n                    label: \"放大\",\n                    role: \"zoomout\"\n                },\n                {\n                    type: \"separator\"\n                },\n                {\n                    label: \"全屏\",\n                    role: \"togglefullscreen\"\n                }\n            ]\n        },\n        {\n            label: \"窗口\",\n            role: \"window\",\n            submenu: [\n                {\n                    lable: \"最小化\",\n                    role: \"minimize\"\n                },\n                {\n                    lable: \"关闭\",\n                    role: \"close\"\n                }\n            ]\n        },\n        {\n            label: \"帮助\",\n            role: \"learn more\",\n            submenu: [\n                {\n                    label: \"关于\",\n                    click() {\n                        require(\"electron\").shell.openExternal(\"https://www.baidu.com\");\n                    }\n                }\n            ]\n        }\n    ];\n    if (process.platform === \"darwin\") {\n        template.unshift({\n            label: app.getName(),\n            submenu: [\n                {\n                    label: \"关于\",\n                    role: \"about\"\n                },\n                {\n                    type: \"separator\"\n                },\n                {\n                    label: \"服务\",\n                    role: \"services\",\n                    submenu: []\n                },\n                {\n                    type: \"separator\"\n                },\n                {\n                    label: \"隐藏\",\n                    role: \"hide\"\n                },\n                {\n                    label: \"隐藏其他\",\n                    role: \"hideothers\"\n                },\n                {\n                    label: \"显示\",\n                    role: \"unhide\"\n                },\n                {\n                    type: \"separator\"\n                },\n                {\n                    label: \"退出\",\n                    role: \"quit\"\n                }\n            ]\n        });\n        // Edit menu\n        template[1].submenu.push({\n            type: \"separator\"\n        }, {\n            label: \"语音助手\",\n            submenu: [\n                {\n                    label: \"开启语音\",\n                    role: \"startspeaking\"\n                },\n                {\n                    label: \"关闭语音\",\n                    role: \"stopspeaking\"\n                }\n            ]\n        });\n        // Window menu\n        template[3].submenu = [\n            {\n                label: \"关闭\",\n                role: \"close\"\n            },\n            {\n                label: \"最小化\",\n                role: \"minimize\"\n            },\n            {\n                label: \"缩放\",\n                role: \"zoom\"\n            },\n            {\n                type: \"separator\"\n            },\n            {\n                label: \"置顶\",\n                role: \"front\"\n            }\n        ];\n    }\n    const menu = Menu.buildFromTemplate(template);\n    Menu.setApplicationMenu(menu);\n}\nexport default setAppMenu;\n","const inarar = __dirname.indexOf(\"app.asar\") > -1;\nconst DEBUG = true;\nconst isproduct = inarar;\nexport { inarar, DEBUG, isproduct };\n","const electron = require(\"electron\");\nconst app = electron.app;\nconst Menu = electron.Menu;\nimport AutoUpdater from './autodater';\nimport WinManager from './winmanager';\nimport initMenu from './initmenu';\nclass Main {\n    constructor() {\n        var self = this;\n        app.on(\"ready\", function () {\n            initMenu(app);\n            WinManager.newwindow(\"main\", \"index.html\");\n        });\n        app.on(\"window-all-closed\", function () {\n            if (process.platform !== \"darwin\") {\n                app.quit();\n            }\n        });\n        app.on(\"activate\", function () {\n            WinManager.newwindow(\"main\");\n        });\n        AutoUpdater.init();\n    }\n}\n;\nvar main = new Main();\n","import WinManager from \"./winmanager\";\nconst electron = require(\"electron\");\nconst ipcMain = electron.ipcMain;\nclass MySocket {\n    constructor() {\n        var self = this;\n        ipcMain.on(\"senddata\", function (socket, result) {\n            console.log('senddata');\n            console.log(result);\n            if (!!result && !!result.tag && !!result.event) {\n                let tag = result.tag;\n                let event = result.event;\n                if (!result.data) {\n                    result.data = null;\n                }\n                let data = result.data;\n                if (tag == \"ALLwinCache\") {\n                    self.sendAll(event, data);\n                }\n                else if (tag == 'MAIN') {\n                    console.log('MAIN');\n                    console.log(data);\n                    if (typeof (self.callbacks[event]) == 'function') {\n                        self.callbacks[event](data);\n                    }\n                }\n                else {\n                    self.sendTo(tag, event, data);\n                }\n            }\n            else {\n                console.log(\"no params\");\n            }\n        });\n    }\n    sendTo(tag, event, data = {}) {\n        if (!WinManager.winCache[tag]) {\n            return;\n        }\n        if (!event) {\n            return;\n        }\n        if (!data) {\n            data = null;\n        }\n        WinManager.winCache[tag].webContents.send(\"senddata\", {\n            'event': event,\n            'data': data\n        });\n    }\n    sendAll(event, data) {\n        for (var i in WinManager.winCache) {\n            WinManager.winCache[i].webContents.send(\"senddata\", {\n                'event': event,\n                'data': data\n            });\n        }\n    }\n    on(event, callback) {\n        this.callbacks[event] = callback;\n    }\n    static getInstance() {\n        return MySocket.instance;\n    }\n}\n// on: {\n//     open: function(data) {\n//         console.log(data)\n//         var url = !!data.url ? data.url : \"main.html\";\n//         var hash = !!data.hash ? data.hash : \"\";\n//         var search = !!data.search ? data.search : \"\";\n//         Main.createWindow(data.tag, url, {\n//             hash: data.hash,\n//             search: data.search\n//         });\n//     }\n// },\nMySocket.instance = new MySocket();\nconst mySocket = MySocket.getInstance();\nexport default mySocket;\n","const electron = require(\"electron\");\nconst BrowserWindow = electron.BrowserWindow;\nconst url = require(\"url\");\nconst path = require(\"path\");\nimport { DEBUG, isproduct } from './libs/env';\nclass WinManager {\n    constructor() {\n    }\n    static newwindow(tag, src = '', config = {}) {\n        var self = this;\n        for (var i in config) {\n            this.defaultWindow[i] = config[i];\n        }\n        if (!this.winCache[tag]) {\n            if (!src) {\n                return;\n            }\n            self.winCache[tag] = new BrowserWindow(config);\n            self.winCache[tag].once(\"ready-to-show\", function () {\n                let hwnd = self.winCache[tag].getNativeWindowHandle(); //获取窗口句柄。\n                self.winCache[tag].show();\n                if (typeof config.onShow == \"function\") {\n                    config.onShow();\n                }\n            });\n            self.winCache[tag].webContents.on(\"dom-ready\", function () {\n                self.winCache[tag].webContents.executeJavaScript('window.WINDOWTAG=\"' + tag + '\"');\n            });\n            self.winCache[tag].loadURL(this.getUrl(src, config));\n            if (DEBUG) {\n                this.winCache[tag].webContents.openDevTools();\n            }\n            self.winCache[tag].on(\"closed\", function () {\n                if (typeof config.onClose == \"function\") {\n                    config.onClose();\n                }\n                self.winCache[tag] = null;\n                delete self.winCache[tag];\n            });\n        }\n        else {\n            self.winCache[tag].loadURL(this.getUrl(src, config));\n            self.winCache[tag].show();\n        }\n        // and load the index.html of the app.\n    }\n    static getUrl(src, config) {\n        let search = config.search || \"\";\n        let hash = config.hash || \"\";\n        let cururl;\n        console.log(path.join(__dirname, (!isproduct ? \"../renderer/\" : \"../renderer/\") + src));\n        if (src.indexOf(\"//\") < 0) {\n            cururl = url.format({\n                pathname: path.join(__dirname, (!isproduct ? \"../renderer/\" : \"../renderer/\") + src),\n                protocol: \"file\",\n                slashes: true,\n                search: search,\n                hash: hash\n            });\n        }\n        else {\n            cururl = src;\n        }\n        return cururl;\n    }\n}\nWinManager.defaultWindow = {\n    width: 1000,\n    height: 800,\n    frame: true,\n    webPreferences: {\n        webSecurity: false\n    },\n    show: false,\n    titleBarStyle: \"hidden\",\n    backgroundColor: \"#3c3c3c\"\n};\nWinManager.winCache = {};\nexport default WinManager;\n","module.exports = require(\"electron\");","module.exports = require(\"path\");","module.exports = require(\"url\");"],"sourceRoot":""}